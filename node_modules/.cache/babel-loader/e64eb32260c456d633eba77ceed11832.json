{"ast":null,"code":"import _regeneratorRuntime from \"/home/ubuntu/Desktop/exam/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/ubuntu/Desktop/exam/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/home/ubuntu/Desktop/exam/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _possibleConstructorReturn from \"/home/ubuntu/Desktop/exam/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/ubuntu/Desktop/exam/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _createClass from \"/home/ubuntu/Desktop/exam/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/home/ubuntu/Desktop/exam/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/ubuntu/Desktop/exam/src/components/App.js\";\nimport React, { Component } from 'react';\nimport Web3 from 'web3';\nimport './App.css';\nimport Meme from '../abis/Meme.json';\nimport exam from './exam.jpg';\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport admin from './admin';\nimport home from './home';\nimport teacher from './manageteacher';\nimport center from './managecenter';\nimport superintendent from './center';\n\nvar ipfsClient = require('ipfs-http-client');\n\nvar ipfs = ipfsClient({\n  host: 'ipfs.infura.io',\n  port: 5001,\n  protocol: 'https'\n}); // leaving out the arguments will default to these values\n\nwindow.$teachers = [{\n  tid: 1,\n  name: \"Lahari\",\n  sid: 1,\n  sub: \"Math\"\n}, {\n  tid: 2,\n  name: \"Prathyusha\",\n  sid: 2,\n  sub: \"Physics\"\n}];\nconsole.log(window.$teachers);\nwindow.$teachers.push('hi');\nconsole.log(window.$teachers);\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  _createClass(App, [{\n    key: \"componentWillMount\",\n    value: function () {\n      var _componentWillMount = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return this.loadWeb3();\n\n              case 2:\n                _context.next = 4;\n                return this.loadBlockchainData();\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function componentWillMount() {\n        return _componentWillMount.apply(this, arguments);\n      }\n\n      return componentWillMount;\n    }()\n  }, {\n    key: \"loadWeb3\",\n    value: function () {\n      var _loadWeb = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2() {\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                if (!window.ethereum) {\n                  _context2.next = 6;\n                  break;\n                }\n\n                window.web3 = new Web3(window.ethereum);\n                _context2.next = 4;\n                return window.ethereum.enable();\n\n              case 4:\n                _context2.next = 7;\n                break;\n\n              case 6:\n                if (window.web3) {\n                  window.web3 = new Web3(window.web3.currentProvider);\n                } else {\n                  window.alert('Non-Ethereum browser detected. You should consider trying MetaMask!');\n                }\n\n              case 7:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      function loadWeb3() {\n        return _loadWeb.apply(this, arguments);\n      }\n\n      return loadWeb3;\n    }()\n  }, {\n    key: \"loadBlockchainData\",\n    value: function () {\n      var _loadBlockchainData = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee3() {\n        var web3, accounts, networkId, networkData, contract, memeHash;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                web3 = window.web3; // Load account\n\n                _context3.next = 3;\n                return web3.eth.getAccounts();\n\n              case 3:\n                accounts = _context3.sent;\n                this.setState({\n                  account: accounts[0]\n                });\n                _context3.next = 7;\n                return web3.eth.net.getId();\n\n              case 7:\n                networkId = _context3.sent;\n                networkData = Meme.networks[networkId];\n\n                if (!networkData) {\n                  _context3.next = 18;\n                  break;\n                }\n\n                contract = web3.eth.Contract(Meme.abi, networkData.address);\n                this.setState({\n                  contract: contract\n                });\n                _context3.next = 14;\n                return contract.methods.get().call();\n\n              case 14:\n                memeHash = _context3.sent;\n                this.setState({\n                  memeHash: memeHash\n                });\n                _context3.next = 19;\n                break;\n\n              case 18:\n                window.alert('Smart contract not deployed to detected network.');\n\n              case 19:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function loadBlockchainData() {\n        return _loadBlockchainData.apply(this, arguments);\n      }\n\n      return loadBlockchainData;\n    }()\n  }]);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n\n    _this.captureFile = function (event) {\n      event.preventDefault();\n      var file = event.target.files[0];\n      var reader = new window.FileReader();\n      reader.readAsArrayBuffer(file);\n\n      reader.onloadend = function () {\n        _this.setState({\n          buffer: Buffer(reader.result)\n        });\n\n        console.log('buffer', _this.state.buffer);\n      };\n    };\n\n    _this.onSubmit = function (event) {\n      event.preventDefault();\n      console.log(\"Submitting file to ipfs...\");\n      ipfs.add(_this.state.buffer, function (error, result) {\n        console.log('Ipfs result', result);\n\n        if (error) {\n          console.error(error);\n          return;\n        }\n\n        _this.state.contract.methods.set(result[0].hash).send({\n          from: _this.state.account\n        }).then(function (r) {\n          return _this.setState({\n            memeHash: result[0].hash\n          });\n        });\n      });\n    };\n\n    _this.state = {\n      memeHash: '',\n      contract: null,\n      web3: null,\n      buffer: null,\n      account: null\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, React.createElement(Router, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, React.createElement(Switch, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, React.createElement(Route, {\n        exact: true,\n        path: \"/\",\n        component: home,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }), React.createElement(Route, {\n        exact: true,\n        path: \"/admin\",\n        component: admin,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }), React.createElement(Route, {\n        exact: true,\n        path: \"/manageteacher\",\n        component: teacher,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }), React.createElement(Route, {\n        exact: true,\n        path: \"/managecenter\",\n        component: center,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }), React.createElement(Route, {\n        exact: true,\n        path: \"/superintendent\",\n        component: superintendent,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }))));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/home/ubuntu/Desktop/exam/src/components/App.js"],"names":["React","Component","Web3","Meme","exam","BrowserRouter","Router","Route","Switch","admin","home","teacher","center","superintendent","ipfsClient","require","ipfs","host","port","protocol","window","$teachers","tid","name","sid","sub","console","log","push","App","loadWeb3","loadBlockchainData","ethereum","web3","enable","currentProvider","alert","eth","getAccounts","accounts","setState","account","net","getId","networkId","networkData","networks","contract","Contract","abi","address","methods","get","call","memeHash","props","captureFile","event","preventDefault","file","target","files","reader","FileReader","readAsArrayBuffer","onloadend","buffer","Buffer","result","state","onSubmit","add","error","set","hash","send","from","then","r"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Web3 from 'web3';\nimport './App.css';\nimport Meme from '../abis/Meme.json';\nimport exam from './exam.jpg'\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport admin from './admin';\nimport home from './home';\nimport teacher from './manageteacher';\nimport center from './managecenter';\nimport superintendent from './center';\nconst ipfsClient = require('ipfs-http-client')\nconst ipfs = ipfsClient({ host: 'ipfs.infura.io', port: 5001, protocol: 'https' }) // leaving out the arguments will default to these values\nwindow.$teachers=[{tid:1,name:\"Lahari\",sid:1,sub:\"Math\"},{tid:2,name:\"Prathyusha\",sid:2,sub:\"Physics\"}]\nconsole.log(window.$teachers)\n\nwindow.$teachers.push('hi')\nconsole.log(window.$teachers)\nclass App extends Component {\n\n  async componentWillMount() {\n    await this.loadWeb3()\n    await this.loadBlockchainData()\n  }\n\n  async loadWeb3() {\n    if (window.ethereum) {\n      window.web3 = new Web3(window.ethereum)\n      await window.ethereum.enable()\n    }\n    else if (window.web3) {\n      window.web3 = new Web3(window.web3.currentProvider)\n    }\n    else {\n      window.alert('Non-Ethereum browser detected. You should consider trying MetaMask!')\n    }\n  }\n\n  async loadBlockchainData() {\n    const web3 = window.web3\n    // Load account\n    const accounts = await web3.eth.getAccounts()\n    this.setState({ account: accounts[0] })\n    const networkId = await web3.eth.net.getId()\n    const networkData = Meme.networks[networkId]\n    if(networkData) {\n      const contract = web3.eth.Contract(Meme.abi, networkData.address)\n      this.setState({ contract })\n      const memeHash = await contract.methods.get().call()\n      this.setState({ memeHash })\n    } else {\n      window.alert('Smart contract not deployed to detected network.')\n    }\n  }\n\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      memeHash: '',\n      contract: null,\n      web3: null,\n      buffer: null,\n      account: null\n    }\n  }\n\n  captureFile = (event) => {\n    event.preventDefault()\n    const file = event.target.files[0]\n    const reader = new window.FileReader()\n    reader.readAsArrayBuffer(file)\n    reader.onloadend = () => {\n      this.setState({ buffer: Buffer(reader.result) })\n      console.log('buffer', this.state.buffer)\n    }\n  }\n\n  onSubmit = (event) => {\n    event.preventDefault()\n    console.log(\"Submitting file to ipfs...\")\n    ipfs.add(this.state.buffer, (error, result) => {\n      console.log('Ipfs result', result)\n      if(error) {\n        console.error(error)\n        return\n      }\n       this.state.contract.methods.set(result[0].hash).send({ from: this.state.account }).then((r) => {\n         return this.setState({ memeHash: result[0].hash })\n       })\n    })\n  }\n\n  render() {\n    return (\n  \n        <div className=\"App\">\n          <Router>\n            \n            <Switch>\n              <Route exact path=\"/\" component={home} />\n              <Route exact path=\"/admin\" component={admin} />\n              <Route exact path=\"/manageteacher\" component={teacher}/>\n              <Route exact path=\"/managecenter\" component={center}/>\n              <Route exact path=\"/superintendent\" component={superintendent}/>\n            </Switch>\n           \n          </Router>\n        </div>\n      );\n    \n  \n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}